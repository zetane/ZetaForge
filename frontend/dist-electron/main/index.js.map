{"version":3,"file":"index.js","sources":["../../electron/main/update.ts","../../node_modules/electron-trpc/dist/main.mjs","../../node_modules/@trpc/server/dist/getCauseFromUnknown-2d66414a.mjs","../../node_modules/@trpc/server/dist/TRPCError-98d44758.mjs","../../node_modules/@trpc/server/dist/codes-c924c3db.mjs","../../node_modules/@trpc/server/dist/index-f91d720c.mjs","../../node_modules/@trpc/server/dist/config-d5fdbd39.mjs","../../node_modules/@trpc/server/dist/index.mjs","../../server/trpc.ts","../../server/fileSystem.js","../../utils/set.js","../../server/pipelineSerialization.js","../../server/router.ts","../../electron/main/index.ts"],"sourcesContent":["import { app, ipcMain } from 'electron'\nimport { createRequire } from 'node:module'\nimport type {\n  ProgressInfo,\n  UpdateDownloadedEvent,\n  UpdateInfo,\n} from 'electron-updater'\n\nconst { autoUpdater } = createRequire(import.meta.url)('electron-updater');\n\nexport function update(win: Electron.BrowserWindow) {\n\n  // When set to false, the update download will be triggered through the API\n  autoUpdater.autoDownload = false\n  autoUpdater.disableWebInstaller = false\n  autoUpdater.allowDowngrade = false\n\n  // start check\n  autoUpdater.on('checking-for-update', function () { })\n  // update available\n  autoUpdater.on('update-available', (arg: UpdateInfo) => {\n    win.webContents.send('update-can-available', { update: true, version: app.getVersion(), newVersion: arg?.version })\n  })\n  // update not available\n  autoUpdater.on('update-not-available', (arg: UpdateInfo) => {\n    win.webContents.send('update-can-available', { update: false, version: app.getVersion(), newVersion: arg?.version })\n  })\n\n  // Checking for updates\n  ipcMain.handle('check-update', async () => {\n    if (!app.isPackaged) {\n      const error = new Error('The update feature is only available after the package.')\n      return { message: error.message, error }\n    }\n\n    try {\n      return await autoUpdater.checkForUpdatesAndNotify()\n    } catch (error) {\n      return { message: 'Network error', error }\n    }\n  })\n\n  // Start downloading and feedback on progress\n  ipcMain.handle('start-download', (event: Electron.IpcMainInvokeEvent) => {\n    startDownload(\n      (error, progressInfo) => {\n        if (error) {\n          // feedback download error message\n          event.sender.send('update-error', { message: error.message, error })\n        } else {\n          // feedback update progress message\n          event.sender.send('download-progress', progressInfo)\n        }\n      },\n      () => {\n        // feedback update downloaded message\n        event.sender.send('update-downloaded')\n      }\n    )\n  })\n\n  // Install now\n  ipcMain.handle('quit-and-install', () => {\n    autoUpdater.quitAndInstall(false, true)\n  })\n}\n\nfunction startDownload(\n  callback: (error: Error | null, info: ProgressInfo | null) => void,\n  complete: (event: UpdateDownloadedEvent) => void,\n) {\n  autoUpdater.on('download-progress', (info: ProgressInfo) => callback(null, info))\n  autoUpdater.on('error', (error: Error) => callback(error, null))\n  autoUpdater.on('update-downloaded', complete)\n  autoUpdater.downloadUpdate()\n}\n","var N = (e, r, n) => {\n  if (!r.has(e))\n    throw TypeError(\"Cannot \" + n);\n};\nvar i = (e, r, n) => (N(e, r, \"read from private field\"), n ? n.call(e) : r.get(e)), f = (e, r, n) => {\n  if (r.has(e))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  r instanceof WeakSet ? r.add(e) : r.set(e, n);\n}, y = (e, r, n, t) => (N(e, r, \"write to private field\"), t ? t.call(e, n) : r.set(e, n), n);\nvar I = (e, r, n) => (N(e, r, \"access private method\"), n);\nimport { ipcMain as H, contextBridge as B, ipcRenderer as C } from \"electron\";\nconst l = \"electron-trpc\";\nfunction V(e) {\n  return !!e && !Array.isArray(e) && typeof e == \"object\";\n}\nfunction j(e, r) {\n  return typeof e == \"string\" ? e : V(e) && typeof e.message == \"string\" ? e.message : r;\n}\nclass _ extends Error {\n  constructor(r) {\n    const n = r.message ?? j(r.cause, r.code);\n    super(n, {\n      cause: r.cause\n    }), this.code = r.code, this.name = this.constructor.name;\n  }\n}\nfunction F(e) {\n  const r = /* @__PURE__ */ Object.create(null);\n  for (const n in e) {\n    const t = e[n];\n    r[t] = n;\n  }\n  return r;\n}\nconst k = {\n  /**\n  * Invalid JSON was received by the server.\n  * An error occurred on the server while parsing the JSON text.\n  */\n  PARSE_ERROR: -32700,\n  /**\n  * The JSON sent is not a valid Request object.\n  */\n  BAD_REQUEST: -32600,\n  /**\n  * Internal JSON-RPC error.\n  */\n  INTERNAL_SERVER_ERROR: -32603,\n  // Implementation specific errors\n  UNAUTHORIZED: -32001,\n  FORBIDDEN: -32003,\n  NOT_FOUND: -32004,\n  METHOD_NOT_SUPPORTED: -32005,\n  TIMEOUT: -32008,\n  CONFLICT: -32009,\n  PRECONDITION_FAILED: -32012,\n  PAYLOAD_TOO_LARGE: -32013,\n  UNPROCESSABLE_CONTENT: -32022,\n  TOO_MANY_REQUESTS: -32029,\n  CLIENT_CLOSED_REQUEST: -32099\n};\nF(k);\nF(k);\nfunction z(e) {\n  var s;\n  const { type: r, path: n } = e;\n  if (!(n in e.procedures) || !((s = e.procedures[n]) != null && s._def[r]))\n    throw new _({\n      code: \"NOT_FOUND\",\n      message: `No \"${r}\"-procedure on path \"${n}\"`\n    });\n  const t = e.procedures[n];\n  return t(e);\n}\nvar D, A, m, U, L, M;\ntypeof window > \"u\" || \"Deno\" in window || ((A = (D = globalThis.process) == null ? void 0 : D.env) == null ? void 0 : A.NODE_ENV) === \"test\" || (U = (m = globalThis.process) == null ? void 0 : m.env) != null && U.JEST_WORKER_ID || (M = (L = globalThis.process) == null ? void 0 : L.env) != null && M.VITEST_WORKER_ID;\nfunction Y(e) {\n  return typeof e == \"object\" && e !== null && \"subscribe\" in e;\n}\nfunction P(e, r) {\n  return \"error\" in r ? {\n    ...r,\n    error: e.transformer.output.serialize(r.error)\n  } : \"data\" in r.result ? {\n    ...r,\n    result: {\n      ...r.result,\n      data: e.transformer.output.serialize(r.result.data)\n    }\n  } : r;\n}\nfunction v(e, r) {\n  return Array.isArray(r) ? r.map((n) => P(e, n)) : P(e, r);\n}\nfunction S(e) {\n  if (e instanceof _)\n    return e;\n  const r = K(e), n = new _({\n    code: \"INTERNAL_SERVER_ERROR\",\n    cause: r,\n    message: r.message\n  });\n  return n.stack = r.stack, n;\n}\nfunction K(e) {\n  return e instanceof Error ? e : typeof e == \"string\" ? new Error(e) : new Error(\"Unknown error\");\n}\nasync function Q({\n  router: e,\n  createContext: r,\n  internalId: n,\n  message: t,\n  event: s,\n  subscriptions: a\n}) {\n  if (t.method === \"subscription.stop\") {\n    const o = a.get(n);\n    if (!o)\n      return;\n    o.unsubscribe(), a.delete(n);\n    return;\n  }\n  const { type: p, input: w, path: R, id: d } = t.operation, h = w ? e._def._config.transformer.input.deserialize(w) : void 0, O = await (r == null ? void 0 : r({ event: s })) ?? {}, E = (o) => {\n    s.sender.isDestroyed() || s.reply(l, v(e._def._config, o));\n  };\n  try {\n    const o = await z({\n      ctx: O,\n      path: R,\n      procedures: e._def.procedures,\n      rawInput: h,\n      type: p\n    });\n    if (p !== \"subscription\") {\n      E({\n        id: d,\n        result: {\n          type: \"data\",\n          data: o\n        }\n      });\n      return;\n    } else if (!Y(o))\n      throw new _({\n        message: `Subscription ${R} did not return an observable`,\n        code: \"INTERNAL_SERVER_ERROR\"\n      });\n    const b = o.subscribe({\n      next(g) {\n        E({\n          id: d,\n          result: {\n            type: \"data\",\n            data: g\n          }\n        });\n      },\n      error(g) {\n        const $ = S(g);\n        E({\n          id: d,\n          error: e.getErrorShape({\n            error: $,\n            type: p,\n            path: R,\n            input: h,\n            ctx: O\n          })\n        });\n      },\n      complete() {\n        E({\n          id: d,\n          result: {\n            type: \"stopped\"\n          }\n        });\n      }\n    });\n    a.set(n, b);\n  } catch (o) {\n    const b = S(o);\n    return E({\n      id: d,\n      error: e.getErrorShape({\n        error: b,\n        type: p,\n        path: R,\n        input: h,\n        ctx: O\n      })\n    });\n  }\n}\nconst x = (e, r) => {\n  const n = r.method === \"request\" ? r.operation.id : r.id;\n  return `${e.sender.id}-${e.senderFrame.routingId}:${n}`;\n};\nvar c, u, T, W;\nclass G {\n  constructor({\n    createContext: r,\n    router: n,\n    windows: t = []\n  }) {\n    f(this, T);\n    f(this, c, []);\n    f(this, u, /* @__PURE__ */ new Map());\n    t.forEach((s) => this.attachWindow(s)), H.on(l, (s, a) => {\n      Q({\n        router: n,\n        createContext: r,\n        internalId: x(s, a),\n        event: s,\n        message: a,\n        subscriptions: i(this, u)\n      });\n    });\n  }\n  attachWindow(r) {\n    i(this, c).includes(r) || (i(this, c).push(r), I(this, T, W).call(this, r));\n  }\n  detachWindow(r) {\n    y(this, c, i(this, c).filter((n) => n !== r));\n    for (const [n, t] of i(this, u).entries())\n      n.startsWith(`${r.webContents.id}-`) && (t.unsubscribe(), i(this, u).delete(n));\n  }\n}\nc = new WeakMap(), u = new WeakMap(), T = new WeakSet(), W = function(r) {\n  r.webContents.on(\"destroyed\", () => {\n    this.detachWindow(r);\n  });\n};\nconst X = ({\n  createContext: e,\n  router: r,\n  windows: n = []\n}) => new G({ createContext: e, router: r, windows: n }), q = () => {\n  const e = {\n    sendMessage: (r) => C.send(l, r),\n    onMessage: (r) => C.on(l, (n, t) => r(t))\n  };\n  B.exposeInMainWorld(\"electronTRPC\", e);\n};\nexport {\n  l as ELECTRON_TRPC_CHANNEL,\n  X as createIPCHandler,\n  q as exposeElectronTRPC\n};\n","/**\n * @internal\n */ function isObject(value) {\n    // check that value is object\n    return !!value && !Array.isArray(value) && typeof value === 'object';\n}\n\nclass UnknownCauseError extends Error {\n}\nfunction getCauseFromUnknown(cause) {\n    if (cause instanceof Error) {\n        return cause;\n    }\n    const type = typeof cause;\n    if (type === 'undefined' || type === 'function' || cause === null) {\n        return undefined;\n    }\n    // Primitive types just get wrapped in an error\n    if (type !== 'object') {\n        return new Error(String(cause));\n    }\n    // If it's an object, we'll create a synthetic error\n    if (isObject(cause)) {\n        const err = new UnknownCauseError();\n        for(const key in cause){\n            err[key] = cause[key];\n        }\n        return err;\n    }\n    return undefined;\n}\n\nexport { getCauseFromUnknown as g };\n","import { g as getCauseFromUnknown } from './getCauseFromUnknown-2d66414a.mjs';\n\nfunction getTRPCErrorFromUnknown(cause) {\n    if (cause instanceof TRPCError) {\n        return cause;\n    }\n    if (cause instanceof Error && cause.name === 'TRPCError') {\n        // https://github.com/trpc/trpc/pull/4848\n        return cause;\n    }\n    const trpcError = new TRPCError({\n        code: 'INTERNAL_SERVER_ERROR',\n        cause\n    });\n    // Inherit stack from error\n    if (cause instanceof Error && cause.stack) {\n        trpcError.stack = cause.stack;\n    }\n    return trpcError;\n}\nclass TRPCError extends Error {\n    constructor(opts){\n        const cause = getCauseFromUnknown(opts.cause);\n        const message = opts.message ?? cause?.message ?? opts.code;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore https://github.com/tc39/proposal-error-cause\n        super(message, {\n            cause\n        });\n        this.code = opts.code;\n        this.name = 'TRPCError';\n        if (!this.cause) {\n            // < ES2022 / < Node 16.9.0 compatability\n            this.cause = cause;\n        }\n    }\n}\n\nexport { TRPCError as T, getTRPCErrorFromUnknown as g };\n","/**\n * @internal\n */ function invert(obj) {\n    const newObj = Object.create(null);\n    for(const key in obj){\n        const v = obj[key];\n        newObj[v] = key;\n    }\n    return newObj;\n}\n\n// reference: https://www.jsonrpc.org/specification\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */ const TRPC_ERROR_CODES_BY_KEY = {\n    /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */ PARSE_ERROR: -32700,\n    /**\n   * The JSON sent is not a valid Request object.\n   */ BAD_REQUEST: -32600,\n    // Internal JSON-RPC error\n    INTERNAL_SERVER_ERROR: -32603,\n    NOT_IMPLEMENTED: -32603,\n    // Implementation specific errors\n    UNAUTHORIZED: -32001,\n    FORBIDDEN: -32003,\n    NOT_FOUND: -32004,\n    METHOD_NOT_SUPPORTED: -32005,\n    TIMEOUT: -32008,\n    CONFLICT: -32009,\n    PRECONDITION_FAILED: -32012,\n    PAYLOAD_TOO_LARGE: -32013,\n    UNPROCESSABLE_CONTENT: -32022,\n    TOO_MANY_REQUESTS: -32029,\n    CLIENT_CLOSED_REQUEST: -32099\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\n\nexport { TRPC_ERROR_CODES_BY_KEY as T, TRPC_ERROR_CODES_BY_NUMBER as a, invert as i };\n","import { i as invert, T as TRPC_ERROR_CODES_BY_KEY } from './codes-c924c3db.mjs';\n\nconst TRPC_ERROR_CODES_BY_NUMBER = invert(TRPC_ERROR_CODES_BY_KEY);\nconst JSONRPC2_TO_HTTP_CODE = {\n    PARSE_ERROR: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    FORBIDDEN: 403,\n    METHOD_NOT_SUPPORTED: 405,\n    TIMEOUT: 408,\n    CONFLICT: 409,\n    PRECONDITION_FAILED: 412,\n    PAYLOAD_TOO_LARGE: 413,\n    UNPROCESSABLE_CONTENT: 422,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_CLOSED_REQUEST: 499,\n    INTERNAL_SERVER_ERROR: 500,\n    NOT_IMPLEMENTED: 501\n};\nfunction getStatusCodeFromKey(code) {\n    return JSONRPC2_TO_HTTP_CODE[code] ?? 500;\n}\nfunction getHTTPStatusCode(json) {\n    const arr = Array.isArray(json) ? json : [\n        json\n    ];\n    const httpStatuses = new Set(arr.map((res)=>{\n        if ('error' in res) {\n            const data = res.error.data;\n            if (typeof data.httpStatus === 'number') {\n                return data.httpStatus;\n            }\n            const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n            return getStatusCodeFromKey(code);\n        }\n        return 200;\n    }));\n    if (httpStatuses.size !== 1) {\n        return 207;\n    }\n    const httpStatus = httpStatuses.values().next().value;\n    return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n    return getStatusCodeFromKey(error.code);\n}\n\nconst noop = ()=>{\n// noop\n};\nfunction createInnerProxy(callback, path) {\n    const proxy = new Proxy(noop, {\n        get (_obj, key) {\n            if (typeof key !== 'string' || key === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return createInnerProxy(callback, [\n                ...path,\n                key\n            ]);\n        },\n        apply (_1, _2, args) {\n            const isApply = path[path.length - 1] === 'apply';\n            return callback({\n                args: isApply ? args.length >= 2 ? args[1] : [] : args,\n                path: isApply ? path.slice(0, -1) : path\n            });\n        }\n    });\n    return proxy;\n}\n/**\n * Creates a proxy that calls the callback with the path and arguments\n *\n * @internal\n */ const createRecursiveProxy = (callback)=>createInnerProxy(callback, []);\n/**\n * Used in place of `new Proxy` where each handler will map 1 level deep to another value.\n *\n * @internal\n */ const createFlatProxy = (callback)=>{\n    return new Proxy(noop, {\n        get (_obj, name) {\n            if (typeof name !== 'string' || name === 'then') {\n                // special case for if the proxy is accidentally treated\n                // like a PromiseLike (like in `Promise.resolve(proxy)`)\n                return undefined;\n            }\n            return callback(name);\n        }\n    });\n};\n\nexport { TRPC_ERROR_CODES_BY_NUMBER as T, createRecursiveProxy as a, getHTTPStatusCode as b, createFlatProxy as c, getHTTPStatusCodeFromError as g };\n","import { T as TRPCError } from './TRPCError-98d44758.mjs';\nimport { a as createRecursiveProxy, g as getHTTPStatusCodeFromError } from './index-f91d720c.mjs';\nimport { T as TRPC_ERROR_CODES_BY_KEY } from './codes-c924c3db.mjs';\n\n/**\n * @public\n */ /**\n * @internal\n */ function getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\n/**\n * @internal\n */ const defaultTransformer = {\n    _default: true,\n    input: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    },\n    output: {\n        serialize: (obj)=>obj,\n        deserialize: (obj)=>obj\n    }\n};\n\nconst defaultFormatter = ({ shape  })=>{\n    return shape;\n};\n\n/**\n * Create an object without inheriting anything from `Object.prototype`\n * @internal\n */ function omitPrototype(obj) {\n    return Object.assign(Object.create(null), obj);\n}\n\nconst procedureTypes = [\n    'query',\n    'mutation',\n    'subscription'\n];\n\nfunction isRouter(procedureOrRouter) {\n    return 'router' in procedureOrRouter._def;\n}\nconst emptyRouter = {\n    _ctx: null,\n    _errorShape: null,\n    _meta: null,\n    queries: {},\n    mutations: {},\n    subscriptions: {},\n    errorFormatter: defaultFormatter,\n    transformer: defaultTransformer\n};\n/**\n * Reserved words that can't be used as router or procedure names\n */ const reservedWords = [\n    /**\n   * Then is a reserved word because otherwise we can't return a promise that returns a Proxy\n   * since JS will think that `.then` is something that exists\n   */ 'then'\n];\n/**\n * @internal\n */ function createRouterFactory(config) {\n    return function createRouterInner(procedures) {\n        const reservedWordsUsed = new Set(Object.keys(procedures).filter((v)=>reservedWords.includes(v)));\n        if (reservedWordsUsed.size > 0) {\n            throw new Error('Reserved words used in `router({})` call: ' + Array.from(reservedWordsUsed).join(', '));\n        }\n        const routerProcedures = omitPrototype({});\n        function recursiveGetPaths(procedures, path = '') {\n            for (const [key, procedureOrRouter] of Object.entries(procedures ?? {})){\n                const newPath = `${path}${key}`;\n                if (isRouter(procedureOrRouter)) {\n                    recursiveGetPaths(procedureOrRouter._def.procedures, `${newPath}.`);\n                    continue;\n                }\n                if (routerProcedures[newPath]) {\n                    throw new Error(`Duplicate key: ${newPath}`);\n                }\n                routerProcedures[newPath] = procedureOrRouter;\n            }\n        }\n        recursiveGetPaths(procedures);\n        const _def = {\n            _config: config,\n            router: true,\n            procedures: routerProcedures,\n            ...emptyRouter,\n            record: procedures,\n            queries: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.query).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {}),\n            mutations: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.mutation).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {}),\n            subscriptions: Object.entries(routerProcedures).filter((pair)=>pair[1]._def.subscription).reduce((acc, [key, val])=>({\n                    ...acc,\n                    [key]: val\n                }), {})\n        };\n        const router = {\n            ...procedures,\n            _def,\n            createCaller (ctx) {\n                return createCallerFactory()(router)(ctx);\n            },\n            getErrorShape (opts) {\n                const { path , error  } = opts;\n                const { code  } = opts.error;\n                const shape = {\n                    message: error.message,\n                    code: TRPC_ERROR_CODES_BY_KEY[code],\n                    data: {\n                        code,\n                        httpStatus: getHTTPStatusCodeFromError(error)\n                    }\n                };\n                if (config.isDev && typeof opts.error.stack === 'string') {\n                    shape.data.stack = opts.error.stack;\n                }\n                if (typeof path === 'string') {\n                    shape.data.path = path;\n                }\n                return this._def._config.errorFormatter({\n                    ...opts,\n                    shape\n                });\n            }\n        };\n        return router;\n    };\n}\n/**\n * @internal\n */ function callProcedure(opts) {\n    const { type , path  } = opts;\n    if (!(path in opts.procedures) || !opts.procedures[path]?._def[type]) {\n        throw new TRPCError({\n            code: 'NOT_FOUND',\n            message: `No \"${type}\"-procedure on path \"${path}\"`\n        });\n    }\n    const procedure = opts.procedures[path];\n    return procedure(opts);\n}\nfunction createCallerFactory() {\n    return function createCallerInner(router) {\n        const def = router._def;\n        return function createCaller(ctx) {\n            const proxy = createRecursiveProxy(({ path , args  })=>{\n                // interop mode\n                if (path.length === 1 && procedureTypes.includes(path[0])) {\n                    return callProcedure({\n                        procedures: def.procedures,\n                        path: args[0],\n                        rawInput: args[1],\n                        ctx,\n                        type: path[0]\n                    });\n                }\n                const fullPath = path.join('.');\n                const procedure = def.procedures[fullPath];\n                let type = 'query';\n                if (procedure._def.mutation) {\n                    type = 'mutation';\n                } else if (procedure._def.subscription) {\n                    type = 'subscription';\n                }\n                return procedure({\n                    path: fullPath,\n                    rawInput: args[0],\n                    ctx,\n                    type\n                });\n            });\n            return proxy;\n        };\n    };\n}\n\n/**\n * The default check to see if we're in a server\n */ const isServerDefault = typeof window === 'undefined' || 'Deno' in window || globalThis.process?.env?.NODE_ENV === 'test' || !!globalThis.process?.env?.JEST_WORKER_ID || !!globalThis.process?.env?.VITEST_WORKER_ID;\n\nexport { defaultTransformer as a, createCallerFactory as b, createRouterFactory as c, defaultFormatter as d, callProcedure as e, getDataTransformer as g, isServerDefault as i, procedureTypes as p };\n","import { c as createRouterFactory, d as defaultFormatter, a as defaultTransformer, g as getDataTransformer$1, i as isServerDefault, b as createCallerFactory } from './config-d5fdbd39.mjs';\nexport { e as callProcedure, b as createCallerFactory, a as defaultTransformer, g as getDataTransformer, p as procedureTypes } from './config-d5fdbd39.mjs';\nimport { T as TRPCError, g as getTRPCErrorFromUnknown } from './TRPCError-98d44758.mjs';\nexport { T as TRPCError, g as getTRPCErrorFromUnknown } from './TRPCError-98d44758.mjs';\nimport { g as getHTTPStatusCodeFromError, c as createFlatProxy } from './index-f91d720c.mjs';\nimport { T as TRPC_ERROR_CODES_BY_KEY } from './codes-c924c3db.mjs';\nimport './getCauseFromUnknown-2d66414a.mjs';\n\n/**\n * @deprecated\n */ const middlewareMarker$1 = 'middlewareMarker';\n\nfunction getParseFn$1(procedureParser) {\n    const parser = procedureParser;\n    if (typeof parser === 'function') {\n        // ProcedureParserCustomValidatorEsque\n        return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n        // ProcedureParserZodEsque\n        return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n        // ProcedureParserZodEsque\n        return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n        // ProcedureParserYupEsque\n        return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n        // ProcedureParserSuperstructEsque\n        return parser.create.bind(parser);\n    }\n    throw new Error('Could not find a validator fn');\n}\n/**\n * @internal\n * @deprecated\n */ class Procedure {\n    _def() {\n        return {\n            middlewares: this.middlewares,\n            resolver: this.resolver,\n            inputParser: this.inputParser,\n            outputParser: this.outputParser,\n            meta: this.meta\n        };\n    }\n    async parseInput(rawInput) {\n        try {\n            return await this.parseInputFn(rawInput);\n        } catch (cause) {\n            throw new TRPCError({\n                code: 'BAD_REQUEST',\n                cause\n            });\n        }\n    }\n    async parseOutput(rawOutput) {\n        try {\n            return await this.parseOutputFn(rawOutput);\n        } catch (cause) {\n            throw new TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                cause,\n                message: 'Output validation failed'\n            });\n        }\n    }\n    /**\n   * Trigger middlewares in order, parse raw input, call resolver & parse raw output\n   * @internal\n   */ async call(opts) {\n        // wrap the actual resolver and treat as the last \"middleware\"\n        const middlewaresWithResolver = this.middlewares.concat([\n            async ({ ctx  })=>{\n                const input = await this.parseInput(opts.rawInput);\n                const rawOutput = await this.resolver({\n                    ...opts,\n                    ctx,\n                    input\n                });\n                const data = await this.parseOutput(rawOutput);\n                return {\n                    marker: middlewareMarker$1,\n                    ok: true,\n                    data,\n                    ctx\n                };\n            }\n        ]);\n        // run the middlewares recursively with the resolver as the last one\n        const callRecursive = async (callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        })=>{\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const result = await middlewaresWithResolver[callOpts.index]({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    rawInput: opts.rawInput,\n                    meta: this.meta,\n                    next: async (nextOpts)=>{\n                        return await callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts ? nextOpts.ctx : callOpts.ctx\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ctx: callOpts.ctx,\n                    ok: false,\n                    error: getTRPCErrorFromUnknown(cause),\n                    marker: middlewareMarker$1\n                };\n            }\n        };\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    }\n    /**\n   * Create new procedure with passed middlewares\n   * @param middlewares\n   */ inheritMiddlewares(middlewares) {\n        const Constructor = this.constructor;\n        const instance = new Constructor({\n            middlewares: [\n                ...middlewares,\n                ...this.middlewares\n            ],\n            resolver: this.resolver,\n            inputParser: this.inputParser,\n            outputParser: this.outputParser,\n            meta: this.meta\n        });\n        return instance;\n    }\n    constructor(opts){\n        this.middlewares = opts.middlewares;\n        this.resolver = opts.resolver;\n        this.inputParser = opts.inputParser;\n        this.parseInputFn = getParseFn$1(this.inputParser);\n        this.outputParser = opts.outputParser;\n        this.parseOutputFn = getParseFn$1(this.outputParser);\n        this.meta = opts.meta;\n    }\n}\nfunction createProcedure(opts) {\n    const inputParser = 'input' in opts ? opts.input : (input)=>{\n        if (input != null) {\n            throw new TRPCError({\n                code: 'BAD_REQUEST',\n                message: 'No input expected'\n            });\n        }\n        return undefined;\n    };\n    const outputParser = 'output' in opts && opts.output ? opts.output : (output)=>output;\n    return new Procedure({\n        inputParser: inputParser,\n        resolver: opts.resolve,\n        middlewares: [],\n        outputParser: outputParser,\n        meta: opts.meta\n    });\n}\n\nfunction getParseFn(procedureParser) {\n    const parser = procedureParser;\n    if (typeof parser === 'function') {\n        // ParserCustomValidatorEsque\n        return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n        // ParserZodEsque\n        return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n        // ParserZodEsque\n        // ParserValibotEsque (<= v0.12.X)\n        return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n        // ParserYupEsque\n        return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n        // ParserSuperstructEsque\n        return parser.create.bind(parser);\n    }\n    if (typeof parser.assert === 'function') {\n        // ParserScaleEsque\n        return (value)=>{\n            parser.assert(value);\n            return value;\n        };\n    }\n    throw new Error('Could not find a validator fn');\n}\n/**\n * @deprecated only for backwards compat\n * @internal\n */ function getParseFnOrPassThrough(procedureParser) {\n    if (!procedureParser) {\n        return (v)=>v;\n    }\n    return getParseFn(procedureParser);\n}\n\n/**\n * Ensures there are no duplicate keys when building a procedure.\n */ function mergeWithoutOverrides(obj1, ...objs) {\n    const newObj = Object.assign(Object.create(null), obj1);\n    for (const overrides of objs){\n        for(const key in overrides){\n            if (key in newObj && newObj[key] !== overrides[key]) {\n                throw new Error(`Duplicate key ${key}`);\n            }\n            newObj[key] = overrides[key];\n        }\n    }\n    return newObj;\n}\n\n/**\n * @internal\n */ function createMiddlewareFactory() {\n    function createMiddlewareInner(middlewares) {\n        return {\n            _middlewares: middlewares,\n            unstable_pipe (middlewareBuilderOrFn) {\n                const pipedMiddleware = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                    middlewareBuilderOrFn\n                ];\n                return createMiddlewareInner([\n                    ...middlewares,\n                    ...pipedMiddleware\n                ]);\n            }\n        };\n    }\n    function createMiddleware(fn) {\n        return createMiddlewareInner([\n            fn\n        ]);\n    }\n    return createMiddleware;\n}\nconst experimental_standaloneMiddleware = ()=>({\n        create: createMiddlewareFactory()\n    });\nfunction isPlainObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\n/**\n * @internal\n * Please note, `trpc-openapi` uses this function.\n */ function createInputMiddleware(parse) {\n    const inputMiddleware = async ({ next , rawInput , input ,  })=>{\n        let parsedInput;\n        try {\n            parsedInput = await parse(rawInput);\n        } catch (cause) {\n            throw new TRPCError({\n                code: 'BAD_REQUEST',\n                cause\n            });\n        }\n        // Multiple input parsers\n        const combinedInput = isPlainObject(input) && isPlainObject(parsedInput) ? {\n            ...input,\n            ...parsedInput\n        } : parsedInput;\n        // TODO fix this typing?\n        return next({\n            input: combinedInput\n        });\n    };\n    inputMiddleware._type = 'input';\n    return inputMiddleware;\n}\n/**\n * @internal\n */ function createOutputMiddleware(parse) {\n    const outputMiddleware = async ({ next  })=>{\n        const result = await next();\n        if (!result.ok) {\n            // pass through failures without validating\n            return result;\n        }\n        try {\n            const data = await parse(result.data);\n            return {\n                ...result,\n                data\n            };\n        } catch (cause) {\n            throw new TRPCError({\n                message: 'Output validation failed',\n                code: 'INTERNAL_SERVER_ERROR',\n                cause\n            });\n        }\n    };\n    outputMiddleware._type = 'output';\n    return outputMiddleware;\n}\n\n/**\n * @internal\n */ const middlewareMarker = 'middlewareMarker';\n\nfunction createNewBuilder(def1, def2) {\n    const { middlewares =[] , inputs , meta , ...rest } = def2;\n    // TODO: maybe have a fn here to warn about calls\n    return createBuilder({\n        ...mergeWithoutOverrides(def1, rest),\n        inputs: [\n            ...def1.inputs,\n            ...inputs ?? []\n        ],\n        middlewares: [\n            ...def1.middlewares,\n            ...middlewares\n        ],\n        meta: def1.meta && meta ? {\n            ...def1.meta,\n            ...meta\n        } : meta ?? def1.meta\n    });\n}\nfunction createBuilder(initDef = {}) {\n    const _def = {\n        inputs: [],\n        middlewares: [],\n        ...initDef\n    };\n    return {\n        _def,\n        input (input) {\n            const parser = getParseFn(input);\n            return createNewBuilder(_def, {\n                inputs: [\n                    input\n                ],\n                middlewares: [\n                    createInputMiddleware(parser)\n                ]\n            });\n        },\n        output (output) {\n            const parseOutput = getParseFn(output);\n            return createNewBuilder(_def, {\n                output,\n                middlewares: [\n                    createOutputMiddleware(parseOutput)\n                ]\n            });\n        },\n        meta (meta) {\n            return createNewBuilder(_def, {\n                meta: meta\n            });\n        },\n        /**\n     * @deprecated\n     * This functionality is deprecated and will be removed in the next major version.\n     */ unstable_concat (builder) {\n            return createNewBuilder(_def, builder._def);\n        },\n        use (middlewareBuilderOrFn) {\n            // Distinguish between a middleware builder and a middleware function\n            const middlewares = '_middlewares' in middlewareBuilderOrFn ? middlewareBuilderOrFn._middlewares : [\n                middlewareBuilderOrFn\n            ];\n            return createNewBuilder(_def, {\n                middlewares: middlewares\n            });\n        },\n        query (resolver) {\n            return createResolver({\n                ..._def,\n                query: true\n            }, resolver);\n        },\n        mutation (resolver) {\n            return createResolver({\n                ..._def,\n                mutation: true\n            }, resolver);\n        },\n        subscription (resolver) {\n            return createResolver({\n                ..._def,\n                subscription: true\n            }, resolver);\n        }\n    };\n}\nfunction createResolver(_def, resolver) {\n    const finalBuilder = createNewBuilder(_def, {\n        resolver,\n        middlewares: [\n            async function resolveMiddleware(opts) {\n                const data = await resolver(opts);\n                return {\n                    marker: middlewareMarker,\n                    ok: true,\n                    data,\n                    ctx: opts.ctx\n                };\n            }\n        ]\n    });\n    return createProcedureCaller(finalBuilder._def);\n}\nconst codeblock = `\nThis is a client-only function.\nIf you want to call this function on the server, see https://trpc.io/docs/server/server-side-calls\n`.trim();\nfunction createProcedureCaller(_def) {\n    const procedure = async function resolve(opts) {\n        // is direct server-side call\n        if (!opts || !('rawInput' in opts)) {\n            throw new Error(codeblock);\n        }\n        // run the middlewares recursively with the resolver as the last one\n        const callRecursive = async (callOpts = {\n            index: 0,\n            ctx: opts.ctx\n        })=>{\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const middleware = _def.middlewares[callOpts.index];\n                const result = await middleware({\n                    ctx: callOpts.ctx,\n                    type: opts.type,\n                    path: opts.path,\n                    rawInput: callOpts.rawInput ?? opts.rawInput,\n                    meta: _def.meta,\n                    input: callOpts.input,\n                    next (_nextOpts) {\n                        const nextOpts = _nextOpts;\n                        return callRecursive({\n                            index: callOpts.index + 1,\n                            ctx: nextOpts && 'ctx' in nextOpts ? {\n                                ...callOpts.ctx,\n                                ...nextOpts.ctx\n                            } : callOpts.ctx,\n                            input: nextOpts && 'input' in nextOpts ? nextOpts.input : callOpts.input,\n                            rawInput: nextOpts && 'rawInput' in nextOpts ? nextOpts.rawInput : callOpts.rawInput\n                        });\n                    }\n                });\n                return result;\n            } catch (cause) {\n                return {\n                    ok: false,\n                    error: getTRPCErrorFromUnknown(cause),\n                    marker: middlewareMarker\n                };\n            }\n        };\n        // there's always at least one \"next\" since we wrap this.resolver in a middleware\n        const result = await callRecursive();\n        if (!result) {\n            throw new TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'No result from middlewares - did you forget to `return next()`?'\n            });\n        }\n        if (!result.ok) {\n            // re-throw original error\n            throw result.error;\n        }\n        return result.data;\n    };\n    procedure._def = _def;\n    procedure.meta = _def.meta;\n    return procedure;\n}\n\nfunction migrateProcedure(oldProc, type) {\n    const def = oldProc._def();\n    const inputParser = getParseFnOrPassThrough(def.inputParser);\n    const outputParser = getParseFnOrPassThrough(def.outputParser);\n    const inputMiddleware = createInputMiddleware(inputParser);\n    const builder = createBuilder({\n        inputs: [\n            def.inputParser\n        ],\n        middlewares: [\n            ...def.middlewares,\n            inputMiddleware,\n            createOutputMiddleware(outputParser)\n        ],\n        meta: def.meta,\n        output: def.outputParser,\n        mutation: type === 'mutation',\n        query: type === 'query',\n        subscription: type === 'subscription'\n    });\n    const proc = builder[type]((opts)=>def.resolver(opts));\n    return proc;\n}\nfunction migrateRouter(oldRouter) {\n    const errorFormatter = oldRouter._def.errorFormatter;\n    const transformer = oldRouter._def.transformer;\n    const queries = {};\n    const mutations = {};\n    const subscriptions = {};\n    for (const [name, procedure] of Object.entries(oldRouter._def.queries)){\n        queries[name] = migrateProcedure(procedure, 'query');\n    }\n    for (const [name1, procedure1] of Object.entries(oldRouter._def.mutations)){\n        mutations[name1] = migrateProcedure(procedure1, 'mutation');\n    }\n    for (const [name2, procedure2] of Object.entries(oldRouter._def.subscriptions)){\n        subscriptions[name2] = migrateProcedure(procedure2, 'subscription');\n    }\n    const procedures = mergeWithoutOverrides(queries, mutations, subscriptions);\n    const newRouter = createRouterFactory({\n        transformer,\n        errorFormatter,\n        isDev: process.env.NODE_ENV !== 'production'\n    })(procedures);\n    return newRouter;\n}\n\nfunction getDataTransformer(transformer) {\n    if ('input' in transformer) {\n        return transformer;\n    }\n    return {\n        input: transformer,\n        output: transformer\n    };\n}\nconst PROCEDURE_DEFINITION_MAP = {\n    query: 'queries',\n    mutation: 'mutations',\n    subscription: 'subscriptions'\n};\nfunction safeObject(...args) {\n    return Object.assign(Object.create(null), ...args);\n}\n/**\n * @internal The type signature of this class may change without warning.\n * @deprecated\n */ class Router {\n    static prefixProcedures(procedures, prefix) {\n        const eps = safeObject();\n        for (const [key, procedure] of Object.entries(procedures)){\n            eps[prefix + key] = procedure;\n        }\n        return eps;\n    }\n    query(path, procedure) {\n        const router = new Router({\n            queries: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    mutation(path, procedure) {\n        const router = new Router({\n            mutations: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    subscription(path, procedure) {\n        const router = new Router({\n            subscriptions: safeObject({\n                [path]: createProcedure(procedure)\n            })\n        });\n        return this.merge(router);\n    }\n    merge(prefixOrRouter, maybeRouter) {\n        let prefix = '';\n        let childRouter;\n        if (typeof prefixOrRouter === 'string' && maybeRouter instanceof Router) {\n            prefix = prefixOrRouter;\n            childRouter = maybeRouter;\n        } else if (prefixOrRouter instanceof Router) {\n            childRouter = prefixOrRouter;\n        } else {\n            throw new Error('Invalid args');\n        }\n        const duplicateQueries = Object.keys(childRouter._def.queries).filter((key)=>!!this._def.queries[prefix + key]);\n        const duplicateMutations = Object.keys(childRouter._def.mutations).filter((key)=>!!this._def.mutations[prefix + key]);\n        const duplicateSubscriptions = Object.keys(childRouter._def.subscriptions).filter((key)=>!!this._def.subscriptions[prefix + key]);\n        const duplicates = [\n            ...duplicateQueries,\n            ...duplicateMutations,\n            ...duplicateSubscriptions\n        ];\n        if (duplicates.length) {\n            throw new Error(`Duplicate endpoint(s): ${duplicates.join(', ')}`);\n        }\n        const mergeProcedures = (defs)=>{\n            const newDefs = safeObject();\n            for (const [key, procedure] of Object.entries(defs)){\n                const newProcedure = procedure.inheritMiddlewares(this._def.middlewares);\n                newDefs[key] = newProcedure;\n            }\n            return Router.prefixProcedures(newDefs, prefix);\n        };\n        return new Router({\n            ...this._def,\n            queries: safeObject(this._def.queries, mergeProcedures(childRouter._def.queries)),\n            mutations: safeObject(this._def.mutations, mergeProcedures(childRouter._def.mutations)),\n            subscriptions: safeObject(this._def.subscriptions, mergeProcedures(childRouter._def.subscriptions))\n        });\n    }\n    /**\n   * Invoke procedure. Only for internal use within library.\n   */ async call(opts) {\n        const { type , path  } = opts;\n        const defTarget = PROCEDURE_DEFINITION_MAP[type];\n        const defs = this._def[defTarget];\n        const procedure = defs[path];\n        if (!procedure) {\n            throw new TRPCError({\n                code: 'NOT_FOUND',\n                message: `No \"${type}\"-procedure on path \"${path}\"`\n            });\n        }\n        return procedure.call(opts);\n    }\n    createCaller(ctx) {\n        return {\n            query: (path, ...args)=>{\n                return this.call({\n                    type: 'query',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            },\n            mutation: (path, ...args)=>{\n                return this.call({\n                    type: 'mutation',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            },\n            subscription: (path, ...args)=>{\n                return this.call({\n                    type: 'subscription',\n                    ctx,\n                    path,\n                    rawInput: args[0]\n                });\n            }\n        };\n    }\n    /**\n   * Function to be called before any procedure is invoked\n   * @link https://trpc.io/docs/middlewares\n   */ middleware(middleware) {\n        return new Router({\n            ...this._def,\n            middlewares: [\n                ...this._def.middlewares,\n                middleware\n            ]\n        });\n    }\n    /**\n   * Format errors\n   * @link https://trpc.io/docs/error-formatting\n   */ formatError(errorFormatter) {\n        if (this._def.errorFormatter !== defaultFormatter) {\n            throw new Error('You seem to have double `formatError()`-calls in your router tree');\n        }\n        return new Router({\n            ...this._def,\n            errorFormatter: errorFormatter\n        });\n    }\n    getErrorShape(opts) {\n        const { path , error  } = opts;\n        const { code  } = opts.error;\n        const shape = {\n            message: error.message,\n            code: TRPC_ERROR_CODES_BY_KEY[code],\n            data: {\n                code,\n                httpStatus: getHTTPStatusCodeFromError(error)\n            }\n        };\n        if (globalThis.process?.env?.NODE_ENV !== 'production' && typeof opts.error.stack === 'string') {\n            shape.data.stack = opts.error.stack;\n        }\n        if (typeof path === 'string') {\n            shape.data.path = path;\n        }\n        return this._def.errorFormatter({\n            ...opts,\n            shape\n        });\n    }\n    /**\n   * Add data transformer to serialize/deserialize input args + output\n   * @link https://trpc.io/docs/data-transformers\n   */ transformer(_transformer) {\n        const transformer = getDataTransformer(_transformer);\n        if (this._def.transformer !== defaultTransformer) {\n            throw new Error('You seem to have double `transformer()`-calls in your router tree');\n        }\n        return new Router({\n            ...this._def,\n            transformer\n        });\n    }\n    /**\n   * Flattens the generics of TQueries/TMutations/TSubscriptions.\n   * ⚠️ Experimental - might disappear. ⚠️\n   *\n   * @alpha\n   */ flat() {\n        return this;\n    }\n    /**\n   * Interop mode for v9.x -> v10.x\n   */ interop() {\n        return migrateRouter(this);\n    }\n    constructor(def){\n        this._def = {\n            queries: def?.queries ?? safeObject(),\n            mutations: def?.mutations ?? safeObject(),\n            subscriptions: def?.subscriptions ?? safeObject(),\n            middlewares: def?.middlewares ?? [],\n            errorFormatter: def?.errorFormatter ?? defaultFormatter,\n            transformer: def?.transformer ?? defaultTransformer\n        };\n    }\n}\n/**\n * @deprecated\n */ function router() {\n    return new Router();\n}\n\nfunction mergeRouters(...routerList) {\n    const record = mergeWithoutOverrides({}, ...routerList.map((r)=>r._def.record));\n    const errorFormatter = routerList.reduce((currentErrorFormatter, nextRouter)=>{\n        if (nextRouter._def._config.errorFormatter && nextRouter._def._config.errorFormatter !== defaultFormatter) {\n            if (currentErrorFormatter !== defaultFormatter && currentErrorFormatter !== nextRouter._def._config.errorFormatter) {\n                throw new Error('You seem to have several error formatters');\n            }\n            return nextRouter._def._config.errorFormatter;\n        }\n        return currentErrorFormatter;\n    }, defaultFormatter);\n    const transformer = routerList.reduce((prev, current)=>{\n        if (current._def._config.transformer && current._def._config.transformer !== defaultTransformer) {\n            if (prev !== defaultTransformer && prev !== current._def._config.transformer) {\n                throw new Error('You seem to have several transformers');\n            }\n            return current._def._config.transformer;\n        }\n        return prev;\n    }, defaultTransformer);\n    const router = createRouterFactory({\n        errorFormatter,\n        transformer,\n        isDev: routerList.some((r)=>r._def._config.isDev),\n        allowOutsideOfServer: routerList.some((r)=>r._def._config.allowOutsideOfServer),\n        isServer: routerList.some((r)=>r._def._config.isServer),\n        $types: routerList[0]?._def._config.$types\n    })(record);\n    return router;\n}\n\n/**\n * TODO: This can be improved:\n * - We should be able to chain `.meta()`/`.context()` only once\n * - Simplify typings\n * - Doesn't need to be a class but it doesn't really hurt either\n */ class TRPCBuilder {\n    context() {\n        return new TRPCBuilder();\n    }\n    meta() {\n        return new TRPCBuilder();\n    }\n    create(options) {\n        return createTRPCInner()(options);\n    }\n}\n/**\n * Initialize tRPC - done exactly once per backend\n */ const initTRPC = new TRPCBuilder();\nfunction createTRPCInner() {\n    return function initTRPCInner(runtime) {\n        const errorFormatter = runtime?.errorFormatter ?? defaultFormatter;\n        const transformer = getDataTransformer$1(runtime?.transformer ?? defaultTransformer);\n        const config = {\n            transformer,\n            isDev: runtime?.isDev ?? globalThis.process?.env?.NODE_ENV !== 'production',\n            allowOutsideOfServer: runtime?.allowOutsideOfServer ?? false,\n            errorFormatter,\n            isServer: runtime?.isServer ?? isServerDefault,\n            /**\n       * @internal\n       */ $types: createFlatProxy((key)=>{\n                throw new Error(`Tried to access \"$types.${key}\" which is not available at runtime`);\n            })\n        };\n        {\n            // Server check\n            const isServer = runtime?.isServer ?? isServerDefault;\n            if (!isServer && runtime?.allowOutsideOfServer !== true) {\n                throw new Error(`You're trying to use @trpc/server in a non-server environment. This is not supported by default.`);\n            }\n        }\n        return {\n            /**\n       * These are just types, they can't be used\n       * @internal\n       */ _config: config,\n            /**\n       * Builder object for creating procedures\n       * @see https://trpc.io/docs/server/procedures\n       */ procedure: createBuilder({\n                meta: runtime?.defaultMeta\n            }),\n            /**\n       * Create reusable middlewares\n       * @see https://trpc.io/docs/server/middlewares\n       */ middleware: createMiddlewareFactory(),\n            /**\n       * Create a router\n       * @see https://trpc.io/docs/server/routers\n       */ router: createRouterFactory(config),\n            /**\n       * Merge Routers\n       * @see https://trpc.io/docs/server/merging-routers\n       */ mergeRouters,\n            /**\n       * Create a server-side caller for a router\n       * @see https://trpc.io/docs/server/server-side-calls\n       */ createCallerFactory: createCallerFactory()\n        };\n    };\n}\n\nexport { createInputMiddleware, createOutputMiddleware, experimental_standaloneMiddleware, initTRPC, router };\n","import { initTRPC } from '@trpc/server';\n \n/**\n * Initialization of tRPC backend\n * Should be done only once per backend!\n */\nconst t = initTRPC.create();\n \n/**\n * Export reusable router and procedure helpers\n * that can be used throughout the router\n */\nexport const router = t.router;\nexport const publicProcedure = t.procedure;","import fs from \"fs/promises\";\nimport { tmpdir } from \"os\";\nimport path from \"path\";\n\nconst cacheDirectory = path.join(process.cwd(), \".cache\");\n\nexport const readSpecs = async (dir) => {\n  const items = await fs.readdir(dir);\n  //const pipelines = await fs.readdir(\"../pipelines\");\n\n  return specBuilder(items, dir);\n}\n\nconst specBuilder = async (specs, dir) => {\n  const specsData = [];\n\n  for (const item of specs) {\n    try {\n      const itemPath = path.join(dir, item)\n      const stat = await fs.stat(itemPath);\n\n      if (stat.isDirectory()) {\n        const specs = path.join(itemPath, \"specs_v1.json\");\n        try {\n          await fs.stat(specs)\n          const specData = await fs.readFile(specs)\n          specsData.push(JSON.parse(specData))\n        } catch (error) {\n          console.log(\"ERROR: \", error)\n        }\n      }\n\n    } catch (error) {\n        console.log(\"ERRRRRROR: \", error)\n      }\n\n    }\n\n    return specsData;\n}\n\nexport async function fileExists(filePath) {\n  try {\n    await fs.access(filePath);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function readJsonToObject(filePath) {\n  const buffer = await fs.readFile(filePath);\n  return JSON.parse(buffer);\n}\n\nexport async function filterDirectories(filePaths) {\n  const stats = await Promise.all(filePaths.map((p) => fs.stat(p)));\n  return filePaths\n    .map((p, i) => [p, stats[i]])\n    .filter(([p, s]) => s.isDirectory())\n    .map(([p, s]) => p);\n}\n\nexport async function withFileSystemRollback(restorablePaths, workFunction) {\n  const tempDirectory = await fs.mkdtemp(path.join(tmpdir(), \"rollback\"));\n  const existingFiles = [];\n  const notExistingFiles = [];\n\n  try {\n    for (const p of restorablePaths) {\n      if (await fileExists(p)) {\n        await fs.cp(p, path.join(tempDirectory, btoa(p)), { recursive: true });\n        existingFiles.push(p);\n      } else {\n        notExistingFiles.push(p);\n      }\n    }\n\n    await workFunction();\n  } catch (e) {\n    console.error(\n      \"File system operations failed. Starting file rollback. Caused by:\",\n      e\n    );\n    for (const p of existingFiles) {\n      await fs.rm(p, { recursive: true });\n      await fs.cp(path.join(tempDirectory, btoa(p)), p, { recursive: true });\n    }\n    for (const p of notExistingFiles) {\n      await fs.rm(p, { recursive: true });\n    }\n  } finally {\n    await fs.rm(tempDirectory, { recursive: true });\n  }\n}\n","export function setDifference(setA, setB) {\n  const difference = new Set(setA);\n  setB.forEach((e) => {\n    difference.delete(e);\n  });\n  return difference;\n}\n","import {\n  fileExists,\n  filterDirectories,\n  readJsonToObject,\n  withFileSystemRollback,\n} from \"./fileSystem.js\";\nimport { setDifference } from \"../utils/set.js\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport process from \"process\";\n\nconst BLOCK_SPECS = \"specs_v1.json\";\n\nexport async function saveBlock(blockSpecs, fromPath, toPath) {\n  const newFolder = path.join(toPath, blockSpecs.information.id)\n  const existingBlock = path.join(fromPath, blockSpecs.information.id)\n  withFileSystemRollback([toPath], async () => {\n    await fs.mkdir(newFolder, { recursive: true });\n    await fs.cp(existingBlock, newFolder, { recursive: true });\n  })\n  return newFolder;\n}\n\nexport async function copyPipeline(pipelineSpecs, pipelineName, fromDir, toDir) {\n  const pipeline_specs = pipelineName + \".json\";\n  const bufferPath = path.resolve(process.cwd(), fromDir)\n\n  // Takes existing pipeline + spec\n  const pipelineDirectory = toDir;\n  const pipelineSpecsPath = path.join(pipelineDirectory, pipeline_specs);\n\n  const blockIndex = await getBlockIndex([bufferPath]);\n  const pipelineBlockIndex = (await fileExists(pipelineDirectory))\n    ? await getBlockIndex([pipelineDirectory])\n    : {};\n\n  const newPipelineBlock = getPipelineBlocks(pipelineSpecs);\n  const oldPipelineBlocks = (await fileExists(pipelineSpecsPath))\n    ? await readPipelineBlocks(pipelineSpecsPath)\n    : new Set();\n\n  const blocksToAdd = setDifference(newPipelineBlock, oldPipelineBlocks);\n  const blocksToRemove = setDifference(oldPipelineBlocks, newPipelineBlock);\n\n  withFileSystemRollback([pipelineDirectory], async () => {\n    await fs.mkdir(pipelineDirectory, { recursive: true });\n    for (const block of blocksToAdd) {\n      const pipelineBlockPath = path.join(pipelineDirectory, block);\n      await fs.cp(blockIndex[block], pipelineBlockPath, { recursive: true });\n    }\n\n    for (const block of blocksToRemove) {\n      await fs.rm(pipelineBlockIndex[block], { recursive: true });\n    }\n\n    await fs.writeFile(\n      pipelineSpecsPath,\n      JSON.stringify(pipelineSpecs, null, 2)\n    );\n  });\n\n  return {specs: pipeline_specs, dirPath: pipelineDirectory}\n}\n\nasync function getBlockIndex(blockDirectories) {\n  const blockIndex = {};\n  for (const directory of blockDirectories) {\n    const blockPaths = await getBlocksInDirectory(directory);\n    for (const blockPath of blockPaths) {\n      const specs = await readJsonToObject(path.join(blockPath, BLOCK_SPECS));\n      blockIndex[specs.information.id] = blockPath;\n    }\n  }\n  return blockIndex;\n}\n\nfunction getPipelineBlocks(pipelineSpecs) {\n  return new Set(\n    Object.keys(pipelineSpecs.pipeline)\n      .map((k) => pipelineSpecs.pipeline[k])\n      .map((b) => b.information.id)\n      .map((id) => id.substring(0, id.lastIndexOf(\"-\")))\n  );\n}\n\nasync function getBlocksInDirectory(directory) {\n  const files = await fs.readdir(directory);\n  const filePaths = files.map((b) => path.join(directory, b));\n  const directories = await filterDirectories(filePaths);\n\n  return directories;\n}\n\nasync function readPipelineBlocks(specsPath) {\n  const specs = await readJsonToObject(specsPath);\n  return getPipelineBlocks(specs);\n}\n","import { z } from 'zod';\nimport { publicProcedure, router } from './trpc';\nimport { dialog } from 'electron';\nimport { copyPipeline, saveBlock } from './pipelineSerialization.js'\nimport { readSpecs } from \"./fileSystem.js\";\n\nexport const appRouter = router({\n  getBlocks: publicProcedure\n    .query(async () => {\n      const coreBlocks = \"../core/blocks\"\n      try {\n        const blocks = await readSpecs(coreBlocks)\n        return blocks\n      } catch (error) {\n        console.log(error)\n      }\n    }),\n  //TODO: load and validate schema\n  savePipeline: publicProcedure\n    .input(z.object({\n      specs: z.any(),\n      name: z.optional(z.string()),\n      buffer: z.string(),\n      writePath: z.optional(z.string())\n    }))\n    .mutation(async(opts) => {\n      const { input } = opts\n      let { specs, name, buffer, writePath } = input\n      if (!writePath) {\n        const savePath = await dialog.showSaveDialog({properties: ['createDirectory']})\n        if (!savePath.canceled) {\n          const pathArr = savePath.filePath?.split(\"/\")\n          name = pathArr ? pathArr[(pathArr.length - 1)] : name\n          writePath = savePath.filePath\n        }\n      }\n      console.log(\"writing: \", writePath)\n      const savePaths = await copyPipeline(specs, name, buffer, writePath);\n      console.log(\"wrote: \", savePaths)\n\n      return savePaths;\n  }),\n  saveBlock: publicProcedure\n    .input(z.object({\n      blockSpec: z.any(),\n      blockPath: z.string(),\n      pipelinePath: z.string()\n    })) \n    .mutation(async(opts) => {\n      const {input} = opts;\n      const {blockSpec, blockPath, pipelinePath} = input;\n      const savePaths = await saveBlock(blockSpec, blockPath, pipelinePath);\n      console.log(\"saved: \", savePaths)\n      return savePaths;\n    })\n\n});\n \n// Export type router type signature,\n// NOT the router itself.\nexport type AppRouter = typeof appRouter;","import { app, BrowserWindow, shell, ipcMain } from 'electron'\nimport { release } from 'node:os'\nimport { dirname, join } from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport { update } from './update'\nimport { fork } from 'child_process'\nimport { createIPCHandler } from 'electron-trpc/main';\n\nconst __filename = fileURLToPath(import.meta.url)\nconst __dirname = dirname(__filename)\n\nimport { appRouter } from \"../../server/router\";\n\n// The built directory structure\n//\n// ├─┬ dist-electron\n// │ ├─┬ main\n// │ │ └── index.js    > Electron-Main\n// │ └─┬ preload\n// │   └── index.mjs    > Preload-Scripts\n// ├─┬ dist\n// │ └── index.html    > Electron-Renderer\n//\nprocess.env.DIST_ELECTRON = join(__dirname, '../')\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist')\nprocess.env.VITE_PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, '../public')\n  : process.env.DIST\n\n// Disable GPU Acceleration for Windows 7\nif (release().startsWith('6.1')) app.disableHardwareAcceleration()\n\n// Set application name for Windows 10+ notifications\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit()\n  process.exit(0)\n}\n\n// Remove electron security warnings\n// This warning only shows in development mode\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\n// process.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\n\nlet win: BrowserWindow | null = null\n// Here, you can also use other preload\nconst preload = join(__dirname, '../preload/index.mjs')\nconst url = process.env.VITE_DEV_SERVER_URL\nconst indexHtml = join(process.env.DIST, 'index.html')\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: 'ZetaForge',\n    icon: join(process.env.VITE_PUBLIC, 'zetane.png'),\n    webPreferences: {\n      preload,\n      // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\n      nodeIntegration: true,\n\n      // Consider using contextBridge.exposeInMainWorld\n      // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\n      contextIsolation: true,\n    },\n  })\n\n  createIPCHandler({ router: appRouter, windows: [win] });\n\n  if (url) { // electron-vite-vue#298\n    win.loadURL(url)\n    // Open devTool if the app is not packaged\n    //win.webContents.openDevTools()\n  } else {\n    win.loadFile(indexHtml)\n  }\n\n  // Test actively push message to the Electron-Renderer\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\n  })\n\n  // Make all links open with the browser, not with the application\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith('https:')) shell.openExternal(url)\n    return { action: 'deny' }\n  })\n\n  // Apply electron-updater\n  update(win)\n}\n\napp.whenReady().then(createWindow)\n\napp.on('window-all-closed', () => {\n  win = null\n  if (process.platform !== 'darwin') app.quit()\n})\n\napp.on('second-instance', () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized()) win.restore()\n    win.focus()\n  }\n})\n\napp.on('activate', () => {\n  const allWindows = BrowserWindow.getAllWindows()\n  if (allWindows.length) {\n    allWindows[0].focus()\n  } else {\n    createWindow()\n  }\n})\n\n// New window example arg: new windows url\nipcMain.handle('open-win', (_, arg) => {\n  const childWindow = new BrowserWindow({\n    webPreferences: {\n      preload,\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  })\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    childWindow.loadURL(`${url}#${arg}`)\n  } else {\n    childWindow.loadFile(indexHtml, { hash: arg })\n  }\n})\n\n// TODO: Fork is bad, should be using UtilityProcess and MessagePorts\n// Possibly want to use tRPC-electron which binds tRPC calls to IPC calls\nlet ps;\n  //...\nps = fork(`${__dirname}/../../server.mjs`, [], {\n  cwd: `${__dirname}/../../`,\n});\n"],"names":["win","t","H","v","path","procedures","router","_a","result","getDataTransformer$1","_b","specs","i","process","k","z","createIPCHandler","url","_"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7]}