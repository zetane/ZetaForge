apiVersion: v1
kind: Namespace
metadata:
  name: zetaforge
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: executor
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: executor
  namespace: default
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtaskresults
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: executor-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: executor
subjects:
- kind: ServiceAccount
  name: executor
---
apiVersion: v1
kind: Secret
metadata: 
  name: weed-secret
  namespace: default
stringData:
  accessKey: AKIAIOSFODNN7EXAMPLE
  secretKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: forge-bucket
  namespace: default
data:
  default: |
    s3:
      bucket: zetaforge
      endpoint: weed:8333
      region: us-east-1
      insecure: true
      accessKeySecret:
        name: weed-secret
        key: accessKey
      secretKeySecret:
        name: weed-secret
        key: secretKey
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: seaweed-config
  namespace: zetaforge
data:
  config.json: |-
    {
      "identities": [
        {
          "name": "main",
          "credentials": [
            {
              "accessKey": "AKIAIOSFODNN7EXAMPLE",
              "secretKey": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
            }
          ],
          "actions": [
            "Read",
            "List",
            "Write"
          ]
        },
        {
          "name": "anonymous",
          "actions": [
            "Read",
            "List"
          ]
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weed
  namespace: zetaforge
  labels:
    app.kubernetes.io/name: weed
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: weed
  template:
    metadata:
      labels:
        app.kubernetes.io/name: weed
    spec:
      containers:
        - name: weed
          image: chrislusf/seaweedfs
          command: ["weed", "server", "-s3.config=/home/config.json", "-s3"]
          ports:
            - containerPort: 8333
          volumeMounts:
            - name: config
              mountPath: /home
      volumes:
        - name: config
          configMap:
            name: seaweed-config
---
apiVersion: v1
kind: Service
metadata:
  name: weed
  namespace: zetaforge
spec:
  type: LoadBalancer
  loadBalancerIP: ~
  selector:
    app.kubernetes.io/name: weed
  ports:
    - port: 8333
      targetPort: 8333
---
apiVersion: v1
kind: Service
metadata:
  name: weed
  namespace: default
spec:
  type: ExternalName
  externalName: weed.zetaforge.svc.cluster.local
  ports:
  - port: 8333
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: zetaforge
  labels:
    app.kubernetes.io/name: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry
    spec:
      containers:
        - name: registry
          image: registry:2
          ports:
            - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: zetaforge
spec:
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 31111
  selector:
    app.kubernetes.io/name: registry
  type: NodePort
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: anvil
  namespace: zetaforge
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: anvil
  namespace: default
rules:
  - apiGroups:
    - argoproj.io
    resources:
    - workflows
    verbs:
    - create
    - watch
    - get
    - delete
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - watch
    - list
  - apiGroups:
    - ""
    resources:
    - pods/log
    verbs:
    - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: anvil-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: anvil
subjects:
- kind: ServiceAccount
  name: anvil
  namespace: zetaforge
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: anvil
  namespace: zetaforge
  labels:
    app.kubernetes.io/name: anvil
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: anvil
  template:
    metadata:
      labels:
        app.kubernetes.io/name: anvil
    spec:
      serviceAccountName: anvil
      containers:
        - name: anvil
          image: anvil
          command: ["./server"]
          ports:
            - containerPort: 8080
          imagePullPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: anvil
  namespace: zetaforge
spec:
  type: LoadBalancer
  loadBalancerIP: ~
  selector:
    app.kubernetes.io/name: anvil
  ports:
    - port: 8080
      targetPort: 8080